# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - develop

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: buildServer
        displayName: Build Server
        cancelTimeoutInMinutes: 7
        steps:
          - task: Npm@1
            inputs:
              command: "install"
          - task: Npm@1
            displayName: "client - npm run build"
            inputs:
              command: "custom"
              customCommand: "run build"

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: "build"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
              replaceExistingArchive: true

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
              artifact: "server-$(Build.BuildId)"
              publishLocation: "pipeline"

  - stage: deploy
    displayName: Deploy
    dependsOn: build
    jobs:
      - deployment: deployClient
        displayName: Deploy client
        environment: server-dev
        strategy:
          runOnce:
            deploy:
              steps:
                    - task: AzureRmWebAppDeployment@4
                      inputs:
                        ConnectionType: 'AzureRM'
                        azureSubscription: 'Azure thesis resource manager'
                        appType: 'webAppLinux'
                        WebAppName: 'dev-azure-thesis-server'
                        packageForLinux: '$(Pipeline.Workspace)/server-$(Build.BuildId)/*.zip'
                        RuntimeStack: 'NODE|12-lts'
                        StartupCommand: 'node ./bin/www'

