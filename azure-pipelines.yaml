trigger:
  - develop

pr:
  branches:
    include:
      - "*"

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: buildServer
        displayName: Build Server
        cancelTimeoutInMinutes: 7
        steps:
          - task: Npm@1
            displayName: "npm ci"
            inputs:
              command: "custom"
              customCommand: "ci"
          - task: Npm@1
            displayName: "npm run test"
            inputs:
              command: "custom"
              customCommand: "run test"
          - task: Npm@1
            displayName: "npm run build"
            inputs:
              command: "custom"
              customCommand: "run build"
          - task: Npm@1
            displayName: "npm prune production"
            inputs:
              command: "custom"
              customCommand: "prune --production"

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
              replaceExistingArchive: true

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
              artifact: "server-$(Build.BuildId)"
              publishLocation: "pipeline"

  - stage: deploy
    displayName: Deploy
    dependsOn: build
    jobs:
      - deployment: deployServer
        displayName: Deploy server
        environment: server-dev
        variables:
          - group: server-dev
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureAppServiceSettings@1
                  displayName: Azure App Service Settings
                  inputs:
                    azureSubscription: "Azure thesis resource manager"
                    appName: "dev-azure-thesis-server"
                    resourceGroupName: "dev-azure-thesis"
                    appSettings: |
                      [
                        {
                          "name": "DB_USER",
                          "value": "$(DB-USER)"
                        },
                        {
                          "name": "DB_PASSWORD",
                          "value": "$(DB-PASSWORD)"
                        },
                        {
                          "name": "DB_SERVER",
                          "value": "$(DB-SERVER)"
                        },
                        {
                          "name": "DB_NAME",
                          "value": "$(DB-NAME)"
                        },
                        {
                          "name": "PORT",
                          "value": "8080"
                        }
                      ]
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: "AzureRM"
                    azureSubscription: "Azure thesis resource manager"
                    appType: "webAppLinux"
                    WebAppName: "dev-azure-thesis-server"
                    packageForLinux: "$(Pipeline.Workspace)/server-$(Build.BuildId)/*.zip"
                    RuntimeStack: "NODE|12-lts"
                    StartupCommand: "npm start"
